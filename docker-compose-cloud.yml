version: '3.9'
services:
  workshop:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.cloud
    entrypoint: /entrypoint-cloud.sh
    ports:
      - '3001:3001'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - APP_ENV=production
      - PORT=3001
      - REBUILD_APPS=true
      - WORKSHOP=true

  main:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.cloud
    entrypoint: /entrypoint-cloud.sh
    ports:
      - '3000:3000'
    depends_on:
      - workshop
    environment:
      - HOST=localhost
      - PROTOCOL=http
      - PORT=3000
      - APP_ENV=production
      - REDIS_HOST=redis
      - POSTGRES_HOST=postgres
      - POSTGRES_DATABASE=automatisch
      - POSTGRES_USERNAME=automatisch_user
      - POSTGRES_PASSWORD=automatisch_password
      - WIZE_API_HOST=https://dashboard-api.aiwayz.com
      - DOCS_BASE_URL=http://localhost:3000/docs
      - WORKSHOP_API_URL=http://workshop:3001
      - ENCRYPTION_KEY
      - WEBHOOK_SECRET_KEY
      - APP_SECRET_KEY

  worker:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.cloud
    entrypoint: /entrypoint-cloud.sh
    depends_on:
      - main
    environment:
      - APP_ENV=production
      - REDIS_HOST=redis
      - POSTGRES_HOST=postgres
      - POSTGRES_DATABASE=automatisch
      - POSTGRES_USERNAME=automatisch_user
      - POSTGRES_PASSWORD=automatisch_password
      - WIZE_API_HOST=https://dashboard-api.aiwayz.com
      - DOCS_BASE_URL=http://localhost:3000/docs
      - WORKSHOP_API_URL=http://workshop:3001
      - ENCRYPTION_KEY
      - WEBHOOK_SECRET_KEY
      - APP_SECRET_KEY
      - WORKER=true

  postgres:
    image: 'postgres:14.5'
    environment:
      - POSTGRES_DB=automatisch
      - POSTGRES_USER=automatisch_user
      - POSTGRES_PASSWORD=automatisch_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: 'redis:7.0.4'
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
